/*
 * Copyright 2014, NICTA
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(NICTA_BSD)
 */

Ideas/todos/features/issues with capDL

- front-end for binary format from Haskell

- xml backend/front-end for Haskell [?]
- backend to graphviz/dot or other graphing tool
- graphical front-end/simulator/browser

- foreign function interface Haskell/C:
 - be able to walk/operate on Haskell model from C
 - transfer between C and Haskell model representations online


- analysis on Haskell model:
 - compute transitive closure, saturate dep graph, compute subsystems
 - compute effective/de-facto rights 
 - take known covert channels into account for above (sync ep channel)
 

- run/simulate allocation algorithm on Model (in Haskell and C)

- use binary capDL/capDL subset as bootinfo replacement and communication
  mechanism between threads (e.g. init thread and subsystems, kernel and init
  thread, anyone who needs to know how stuff is organised in one's
  cspace/vspace)
  
- make above C part into a standard caps lib (together with alloc algorithms)


